version: 2
orbs:
  sonarqube-analyzer: corballis/sonarqube-analyzer@0.1.1
jobs:
   build:
     branches:
      only:
        - master
        - testing 
     working_directory: ~/angular8
     docker:
       - image: circleci/node:latest 

     steps:
       - checkout
       - run:
           name: Show current branch
           command: echo ${CIRCLE_BRANCH}
       - restore_cache:
           key: sudo dependency-cache-{{ checksum "package-lock.json" }}
       - run:
           name: Install npm
           command: npm install
       - save_cache:
           key: sudo dependency-cache-{{ checksum "package-lock.json" }}
           paths:
             - node_modules
       - run:
           name: Install Dependencies
           command: npm install @angular/cli@8.3.20
       - run:
           name: Building
           command: |
                if [ "${CIRCLE_BRANCH}" == "build-issues" ]; then
                  npm run build-qa
                elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                  npm run build-prod
                else
                  npm run build-dev
                fi
       - sonarqube-analyzer: |
                sonar.login=admin
                sonar.password=admin
                sonar.projectKey=project:key
                sonar.projectName=Project Name goes here
                sonar.projectVersion=1.0
                sonar.sources=$WORKSPACE
         
       - persist_to_workspace: 
           root: dist
           paths: 
             - ./   
       - run:
           name: Compress Artifacts
           command: tar -cvf artifact.tar dist

       - run:
           name: set identity 
           command: |
               git config --global user.email "suryawal.deepali@gmail.com"
               git config --global user.name "deep2131"
       - run:
           name: upload artifact
           command: |
               
                if [ "${CIRCLE_BRANCH}" == "master" ]; then  
                  git clone git@github.com:deep2131/mynewrepo.git
                  cd mynewrepo
                  git checkout master
                  cd Build
                  cp -r ../../artifact.tar .
                  git add artifact.tar
                  git commit -m "artifact"
                  git push --force origin master
                  
                elif [ "${CIRCLE_BRANCH}" == "testing" ]; then
                  git clone git@github.com:deep2131/mynewrepo.git
                  cd mynewrepo
                  git checkout testing
                  cd Build
                  cp -r ../../artifact.tar .
                  git add artifact.tar
                  git commit -m "artifact"
                  git push --force origin testing  
                fi
               
               
           
               
               
           


           
  
