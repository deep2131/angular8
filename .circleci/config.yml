version: 2.1
orbs:
  sonarqube: onehq/sonarqube@0.3.0
jobs:
   build:
     working_directory: ~/angular8
     docker:
       - image: circleci/node:latest 
       
     steps:
       - run:
           name: download java 11
           command: |
              sudo apt-get update 
              sudo apt install openjdk-11-jre-headless
           
       - run:
           name: Install Sonarqube scanner
           command: >
              wget
              https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip

              unzip sonar-scanner-cli-3.2.0.1227-linux.zip
               
       - run:
           name: Run Sonarqube scanner
           command: >
             export SONAR_SCANNER_OPTS="-Xmx2048m"

             eval ./sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner
             
             -Dsonar.projectKey=angular8 \
             -Dsonar.sources=. \
             -Dsonar.exclusions=vendor/bundle/** \
             -Dsonar.sourceEncoding=US-ASCII \
             -Dsonar.host.url=https://sonarqube.onehq.com \
             -Dsonar.projectVersion=${CIRCLE_BRANCH} \
             -Dsonar.login=${SONARQUBE_TOKEN} $SONAR_SCANNER_OPTS_CUSTOM
       - run:
           name: Show current branch
           command: echo ${CIRCLE_BRANCH}
       - restore_cache:
           key: sudo dependency-cache-{{ checksum "package-lock.json" }}
       - run:
           name: Install npm
           command: npm install
       - save_cache:
           key: sudo dependency-cache-{{ checksum "package-lock.json" }}
           paths:
             - node_modules
       - run:
           name: Install Dependencies
           command: npm install @angular/cli@8.3.20

      # - run:
       #    name: Run Sonarqube scanner
        #   command: |
         #     scanner
          #       -Dsonar.projectKey=angular8 \
           #      -Dsonar.sources=. \
            #     -Dsonar.host.url=http://localhost:9000 \
             #    -Dsonar.login=32194091c18e2c98cd620edb215040f1f02fd585
              
       - run:
           name: Building
           command: |
                if [ "${CIRCLE_BRANCH}" == "build-issues" ]; then
                  npm run build-qa
                elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                  npm run build-prod
                else
                  npm run build-dev
                fi
       - persist_to_workspace: 
           root: dist
           paths: 
             - ./

              
         
       - run:
           name: Compress Artifacts
           command: tar -cvf artifact.tar dist

   #    - run:
    #       name: set identity 
     #      command: |
      #         git config --global user.email "suryawal.deepali@gmail.com"
       #        git config --global user.name "deep2131"
       #- run:
        #   name: upload artifact
         #  command: |
          #     
           #     if [ "${CIRCLE_BRANCH}" == "master" ]; then  
            #      git clone git@github.com:deep2131/mynewrepo.git
             #     cd mynewrepo
              #    git checkout master
               #   cd Build
                #  cp -r ../../artifact.tar .
                 # git add artifact.tar
                  #git commit -m "artifact"
                  #git push --force origin master
                  
                #elif [ "${CIRCLE_BRANCH}" == "testing" ]; then
                 # git clone git@github.com:deep2131/mynewrepo.git
                  #cd mynewrepo
                  #git checkout testing
                  #cd Build
                  #cp -r ../../artifact.tar .
                  #git add artifact.tar
                  #git commit -m "artifact"
                  #git push --force origin testing  
                #fi
               
               
           
               
               
           


        
